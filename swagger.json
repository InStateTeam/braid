{
  "openapi": "3.0.1",
  "info" : {
    "title": "",
    "description" : "",
    "contact": {},
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/rest"
    }
  ],
  "paths" : {
    "/network/nodes" : {
      "get" : {
        "tags" : [ "network" ],
        "description": "",
        "parameters" : [ {
          "name" : "host-and-port",
          "in" : "query",
          "schema": {
            "type": "string"
          }
        }, {
          "name" : "x500-name",
          "in" : "query",
          "schema": {
            "type": "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleNodeInfo"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/network/notaries" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "",
        "parameters" : [ {
          "name" : "x500-name",
          "in" : "query",
          "schema": {
            "type": "string"
          }
        }
        ],
        "responses": {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Party"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/network/nodes/self" : {
      "get" : {
        "tags" : [ "network" ],
        "description": "",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleNodeInfo"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/flows" : {
      "get" : {
        "tags" : [ "cordapps" ],
        "description": "",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Authorise" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractUpgradeFlow_AuthorisePayload"
              }
            }
          },
          "required": true
        },
        "responses" : {
          "200" : {
            "description" : "empty response"
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Deauthorise" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractUpgradeFlow_DeauthorisePayload"
              }
            }
          },
          "required": true
        },
        "responses" : {
          "200" : {
            "description" : "empty response"
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Initiate" : { },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashExitFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashExitFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueAndPaymentFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashIssueAndPaymentFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashIssueFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashPaymentFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashPaymentFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.internal.CashConfigDataFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashConfigDataFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses" : {
          "200" : {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashConfiguration"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CordaX500Name": {
        "type": "object",
        "properties": {
          "commonName": {
            "type": "string"
          },
          "organisationUnit": {
            "type": "string"
          },
          "organisation": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "x500Principal": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      },
      "NetworkHostAndPort": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Party": {
        "type": "object",
        "properties": {
          "owningKey": {
            "type": "object",
            "properties": {
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "algorithm": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          },
          "name": {
            "$ref": "#/components/schemas/CordaX500Name"
          }
        }
      },
      "SimpleNodeInfo": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkHostAndPort"
            }
          },
          "legalIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          }
        }
      },
      "AttachmentConstraint": {
        "type": "object"
      },
      "ContractUpgradeFlow_AuthorisePayload": {
        "type": "object",
        "properties": {
          "stateAndRef": {
            "$ref": "#/components/schemas/StateAndRefObject"
          }
        }
      },
      "SecureHash": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "bytes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "StateAndRefObject": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TransactionStateObject"
          },
          "ref": {
            "$ref": "#/components/schemas/StateRef"
          }
        }
      },
      "StateRef": {
        "type": "object",
        "properties": {
          "txhash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TransactionStateObject": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "contract": {
            "type": "string"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "encumbrance": {
            "type": "integer",
            "format": "int32"
          },
          "constraint": {
            "$ref": "#/components/schemas/AttachmentConstraint"
          }
        }
      },
      "ContractUpgradeFlow_DeauthorisePayload": {
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/StateRef"
          }
        }
      },
      "AbstractParty": {
        "type": "object",
        "properties": {
          "owningKey": {
            "type": "object",
            "properties": {
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "algorithm": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          }
        }
      },
      "ContractState": {
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          }
        }
      },
      "StateAndRef": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TransactionStateContractState"
          },
          "ref": {
            "$ref": "#/components/schemas/StateRef"
          }
        }
      },
      "TransactionStateContractState": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContractState"
          },
          "contract": {
            "type": "string"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "encumbrance": {
            "type": "integer",
            "format": "int32"
          },
          "constraint": {
            "$ref": "#/components/schemas/AttachmentConstraint"
          }
        }
      },
      "CommandObject": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object"
          },
          "signers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "encoded": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "algorithm": {
                  "type": "string"
                },
                "format": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ComponentGroup": {
        "type": "object",
        "properties": {
          "groupIndex": {
            "type": "integer",
            "format": "int32"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpaqueBytes"
            }
          }
        }
      },
      "CoreTransaction": {
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "networkParametersHash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionStateContractState"
            }
          },
          "outputStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractState"
            }
          },
          "id": {
            "$ref": "#/components/schemas/SecureHash"
          }
        }
      },
      "MerkleTree": {
        "type": "object",
        "properties": {
          "hash": {
            "$ref": "#/components/schemas/SecureHash"
          }
        }
      },
      "NotaryChangeWireTransaction": {
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "newNotary": {
            "$ref": "#/components/schemas/Party"
          },
          "serializedComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpaqueBytes"
            }
          },
          "id": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "networkParametersHash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionStateContractState"
            }
          },
          "outputStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractState"
            }
          }
        }
      },
      "OpaqueBytes": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "bytes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "PartialMerkleTree": {
        "type": "object",
        "properties": {
          "root": {
            "$ref": "#/components/schemas/PartialTree"
          }
        }
      },
      "PartialTree": {
        "type": "object"
      },
      "PrivacySalt": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "bytes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "stx": {
            "$ref": "#/components/schemas/SignedTransaction"
          },
          "recipient": {
            "$ref": "#/components/schemas/AbstractParty"
          }
        }
      },
      "SerializedBytesCoreTransaction": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "bytes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "hash": {
            "$ref": "#/components/schemas/SecureHash"
          }
        }
      },
      "SignatureMetadata": {
        "type": "object",
        "properties": {
          "platformVersion": {
            "type": "integer",
            "format": "int32"
          },
          "schemeNumberID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SignedTransaction": {
        "type": "object",
        "properties": {
          "txBits": {
            "$ref": "#/components/schemas/SerializedBytesCoreTransaction"
          },
          "sigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSignature"
            }
          },
          "id": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "coreTransaction": {
            "$ref": "#/components/schemas/CoreTransaction"
          },
          "tx": {
            "$ref": "#/components/schemas/WireTransaction"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "networkParametersHash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "requiredSigningKeys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "encoded": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "algorithm": {
                  "type": "string"
                },
                "format": {
                  "type": "string"
                }
              }
            }
          },
          "notaryChangeTx": {
            "$ref": "#/components/schemas/NotaryChangeWireTransaction"
          },
          "notaryChangeTransaction": {
            "type": "boolean"
          },
          "missingSigners": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "encoded": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "algorithm": {
                  "type": "string"
                },
                "format": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TimeWindow": {
        "type": "object",
        "properties": {
          "length": {
            "type": "object",
            "properties": {
              "seconds": {
                "type": "integer",
                "format": "int64"
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "units": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateBased": {
                      "type": "boolean"
                    },
                    "durationEstimated": {
                      "type": "boolean"
                    },
                    "timeBased": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "zero": {
                "type": "boolean"
              },
              "negative": {
                "type": "boolean"
              }
            }
          },
          "fromTime": {
            "type": "integer",
            "format": "int64"
          },
          "untilTime": {
            "type": "integer",
            "format": "int64"
          },
          "midpoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TransactionSignature": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "bytes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "by": {
            "type": "object",
            "properties": {
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "algorithm": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          },
          "signatureMetadata": {
            "$ref": "#/components/schemas/SignatureMetadata"
          },
          "partialMerkleTree": {
            "$ref": "#/components/schemas/PartialMerkleTree"
          }
        }
      },
      "WireTransaction": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecureHash"
            }
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionStateContractState"
            }
          },
          "commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandObject"
            }
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "networkParametersHash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "componentGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentGroup"
            }
          },
          "privacySalt": {
            "$ref": "#/components/schemas/PrivacySalt"
          },
          "id": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "requiredSigningKeys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "encoded": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "algorithm": {
                  "type": "string"
                },
                "format": {
                  "type": "string"
                }
              }
            }
          },
          "merkleTree": {
            "$ref": "#/components/schemas/MerkleTree"
          },
          "groupHashes$core": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecureHash"
            }
          },
          "groupsMerkleRoots$core": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SecureHash"
            }
          },
          "availableComponentNonces$core": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SecureHash"
              }
            }
          },
          "availableComponentHashes$core": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SecureHash"
              }
            }
          },
          "availableComponentGroups": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "outputStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractState"
            }
          }
        }
      },
      "AmountCurrency": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "displayTokenSize": {
            "type": "number"
          },
          "token": {
            "type": "object",
            "properties": {
              "currencyCode": {
                "type": "string"
              },
              "defaultFractionDigits": {
                "type": "integer",
                "format": "int32"
              },
              "numericCode": {
                "type": "integer",
                "format": "int32"
              },
              "symbol": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              }
            }
          }
        }
      },
      "CashExitFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issuerRef": {
            "$ref": "#/components/schemas/OpaqueBytes"
          }
        }
      },
      "CashIssueAndPaymentFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issueRef": {
            "$ref": "#/components/schemas/OpaqueBytes"
          },
          "recipient": {
            "$ref": "#/components/schemas/Party"
          },
          "anonymous": {
            "type": "boolean"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          }
        }
      },
      "CashIssueFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issuerBankPartyRef": {
            "$ref": "#/components/schemas/OpaqueBytes"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          }
        }
      },
      "CashPaymentFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "recipient": {
            "$ref": "#/components/schemas/Party"
          },
          "anonymous": {
            "type": "boolean"
          },
          "issuerConstraint": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          }
        }
      },
      "CashConfiguration": {
        "type": "object",
        "properties": {
          "issuableCurrencies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "currencyCode": {
                  "type": "string"
                },
                "defaultFractionDigits": {
                  "type": "integer",
                  "format": "int32"
                },
                "numericCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "symbol": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                }
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "currencyCode": {
                  "type": "string"
                },
                "defaultFractionDigits": {
                  "type": "integer",
                  "format": "int32"
                },
                "numericCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "symbol": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CashConfigDataFlowPayload": {
        "type": "object"
      },
      "Actor": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "serviceId": {
            "$ref": "#/components/schemas/AuthServiceId"
          },
          "owningLegalIdentity": {
            "$ref": "#/components/schemas/CordaX500Name"
          }
        }
      },
      "AuthServiceId": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "Id": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "InvocationContext": {
        "type": "object",
        "properties": {
          "origin": {
            "$ref": "#/components/schemas/InvocationOrigin"
          },
          "trace": {
            "$ref": "#/components/schemas/Trace"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          },
          "externalTrace": {
            "$ref": "#/components/schemas/Trace"
          },
          "impersonatedActor": {
            "$ref": "#/components/schemas/Actor"
          }
        }
      },
      "InvocationId": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InvocationOrigin": {
        "type": "object"
      },
      "SessionId": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Trace": {
        "type": "object",
        "properties": {
          "invocationId": {
            "$ref": "#/components/schemas/InvocationId"
          },
          "sessionId": {
            "$ref": "#/components/schemas/SessionId"
          }
        }
      },
      "Peer": {
        "type": "object",
        "properties": {
          "party": {
            "$ref": "#/components/schemas/CordaX500Name"
          }
        }
      },
      "RPC": {
        "type": "object",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/Actor"
          }
        }
      },
      "Scheduled": {
        "type": "object",
        "properties": {
          "scheduledState": {
            "$ref": "#/components/schemas/ScheduledStateRef"
          }
        }
      },
      "ScheduledStateRef": {
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/StateRef"
          },
          "scheduledAt": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "serviceClassName": {
            "type": "string"
          },
          "owningLegalIdentity": {
            "$ref": "#/components/schemas/CordaX500Name"
          }
        }
      },
      "Shell": {
        "type": "object"
      },
      "AmountTransfer": {
        "type": "object",
        "properties": {
          "quantityDelta": {
            "type": "integer",
            "format": "int64"
          },
          "destination": {
            "type": "object"
          }
        }
      },
      "LinearPointer": {
        "type": "object",
        "properties": {
          "pointer": {
            "$ref": "#/components/schemas/UniqueIdentifier"
          }
        }
      },
      "UniqueIdentifier": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "StaticPointer": {
        "type": "object",
        "properties": {
          "pointer": {
            "$ref": "#/components/schemas/StateRef"
          }
        }
      },
      "TransactionState": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContractState"
          },
          "contract": {
            "type": "string"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "encumbrance": {
            "type": "integer",
            "format": "int32"
          },
          "constraint": {
            "$ref": "#/components/schemas/AttachmentConstraint"
          }
        }
      },
      "InvalidAttachmentException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "className": {
                  "type": "string"
                },
                "nativeMethod": {
                  "type": "boolean"
                }
              }
            }
          },
          "originalExceptionClassName": {
            "type": "string"
          },
          "originalErrorId": {
            "type": "integer",
            "format": "int64"
          },
          "txId": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "attachmentHash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "errorId": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "originalMessage": {
            "type": "string"
          },
          "localizedMessage": {
            "type": "string"
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "className": {
                        "type": "string"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PackageOwnershipException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "className": {
                  "type": "string"
                },
                "nativeMethod": {
                  "type": "boolean"
                }
              }
            }
          },
          "originalExceptionClassName": {
            "type": "string"
          },
          "originalErrorId": {
            "type": "integer",
            "format": "int64"
          },
          "txId": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "attachmentHash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "invalidClassName": {
            "type": "string"
          },
          "packageName": {
            "type": "string"
          },
          "errorId": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "originalMessage": {
            "type": "string"
          },
          "localizedMessage": {
            "type": "string"
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "className": {
                        "type": "string"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SHA256": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "bytes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "APPROVING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ObservableChange": {
        "type": "object"
      },
      "VERIFYING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "NOTARY": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SIGNING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Proposal": {
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/StateRef"
          },
          "modification": {
            "type": "object"
          }
        }
      },
      "COLLECTING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BROADCASTING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "NOTARISING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "FlowInfo": {
        "type": "object",
        "properties": {
          "flowVersion": {
            "type": "integer",
            "format": "int32"
          },
          "appName": {
            "type": "string"
          }
        }
      },
      "IllegalFlowLogicException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "className": {
                  "type": "string"
                },
                "nativeMethod": {
                  "type": "boolean"
                }
              }
            }
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "localizedMessage": {
            "type": "string"
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "className": {
                        "type": "string"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotarisationPayload": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object"
          },
          "requestSignature": {
            "$ref": "#/components/schemas/NotarisationRequestSignature"
          },
          "coreTransaction": {
            "$ref": "#/components/schemas/CoreTransaction"
          },
          "signedTransaction": {
            "$ref": "#/components/schemas/SignedTransaction"
          }
        }
      },
      "NotarisationRequestSignature": {
        "type": "object",
        "properties": {
          "digitalSignature": {
            "$ref": "#/components/schemas/WithKey"
          },
          "platformVersion": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WithKey": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "bytes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "by": {
            "type": "object",
            "properties": {
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "algorithm": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          }
        }
      },
      "NotarisationRequest": {
        "type": "object",
        "properties": {
          "transactionId": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "statesToConsume": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          }
        }
      },
      "NotarisationResponse": {
        "type": "object",
        "properties": {
          "signatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSignature"
            }
          }
        }
      },
      "Conflict": {
        "type": "object",
        "properties": {
          "txId": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "consumedStates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/StateConsumptionDetails"
            }
          }
        }
      },
      "StateConsumptionDetails": {
        "type": "object",
        "properties": {
          "hashOfTransactionId": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "type": {
            "type": "string",
            "enum": [
              "INPUT_STATE",
              "REFERENCE_INPUT_STATE"
            ]
          }
        }
      },
      "General": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RequestSignatureInvalid": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TimeWindowInvalid": {
        "type": "object",
        "properties": {
          "currentTime": {
            "type": "integer",
            "format": "int64"
          },
          "txTimeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          }
        }
      },
      "TransactionInvalid": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "WrongNotary": {
        "type": "object"
      },
      "REQUESTING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "VALIDATING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "RECEIVING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "WaitTimeUpdate": {
        "type": "object",
        "properties": {
          "waitTime": {
            "type": "object",
            "properties": {
              "seconds": {
                "type": "integer",
                "format": "int64"
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "units": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateBased": {
                      "type": "boolean"
                    },
                    "durationEstimated": {
                      "type": "boolean"
                    },
                    "timeBased": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "zero": {
                "type": "boolean"
              },
              "negative": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "ATTEMPT": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "RETRYING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SUCCESS": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "DataFeed": {
        "type": "object",
        "properties": {
          "snapshot": {
            "type": "object"
          },
          "updates": {
            "$ref": "#/components/schemas/ObservableObject"
          }
        }
      },
      "ObservableObject": {
        "type": "object"
      },
      "CordaFutureObject": {
        "type": "object",
        "properties": {
          "done": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          }
        }
      },
      "FlowHandleImpl": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/StateMachineRunId"
          },
          "returnValue": {
            "$ref": "#/components/schemas/CordaFutureObject"
          }
        }
      },
      "StateMachineRunId": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DataFeedIntegerInteger": {
        "type": "object",
        "properties": {
          "snapshot": {
            "type": "integer",
            "format": "int32"
          },
          "updates": {
            "$ref": "#/components/schemas/ObservableInteger"
          }
        }
      },
      "DataFeedListPairIntegerStringListPairIntegerString": {
        "type": "object",
        "properties": {
          "snapshot": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PairIntegerString"
            }
          },
          "updates": {
            "$ref": "#/components/schemas/ObservableListPairIntegerString"
          }
        }
      },
      "FlowProgressHandleImpl": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/StateMachineRunId"
          },
          "returnValue": {
            "$ref": "#/components/schemas/CordaFutureObject"
          },
          "progress": {
            "$ref": "#/components/schemas/ObservableString"
          },
          "stepsTreeIndexFeed": {
            "$ref": "#/components/schemas/DataFeedIntegerInteger"
          },
          "stepsTreeFeed": {
            "$ref": "#/components/schemas/DataFeedListPairIntegerStringListPairIntegerString"
          }
        }
      },
      "ObservableInteger": {
        "type": "object"
      },
      "ObservableListPairIntegerString": {
        "type": "object"
      },
      "ObservableString": {
        "type": "object"
      },
      "PairIntegerString": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "string"
          }
        }
      },
      "NetworkParameters": {
        "type": "object",
        "properties": {
          "minimumPlatformVersion": {
            "type": "integer",
            "format": "int32"
          },
          "notaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotaryInfo"
            }
          },
          "maxMessageSize": {
            "type": "integer",
            "format": "int32"
          },
          "maxTransactionSize": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedTime": {
            "type": "integer",
            "format": "int64"
          },
          "epoch": {
            "type": "integer",
            "format": "int32"
          },
          "whitelistedContractImplementations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SecureHash"
              }
            }
          },
          "eventHorizon": {
            "type": "object",
            "properties": {
              "seconds": {
                "type": "integer",
                "format": "int64"
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "units": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateBased": {
                      "type": "boolean"
                    },
                    "durationEstimated": {
                      "type": "boolean"
                    },
                    "timeBased": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "zero": {
                "type": "boolean"
              },
              "negative": {
                "type": "boolean"
              }
            }
          },
          "packageOwnership": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "encoded": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "algorithm": {
                  "type": "string"
                },
                "format": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotaryInfo": {
        "type": "object",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/Party"
          },
          "validating": {
            "type": "boolean"
          }
        }
      },
      "ParametersUpdateInfo": {
        "type": "object",
        "properties": {
          "hash": {
            "$ref": "#/components/schemas/SecureHash"
          },
          "parameters": {
            "$ref": "#/components/schemas/NetworkParameters"
          },
          "description": {
            "type": "string"
          },
          "updateDeadline": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DataFeedStringString": {
        "type": "object",
        "properties": {
          "snapshot": {
            "type": "string"
          },
          "updates": {
            "$ref": "#/components/schemas/ObservableString"
          }
        }
      },
      "FlowInitiator": {
        "type": "object",
        "properties": {
          "invocationContext": {
            "$ref": "#/components/schemas/InvocationContext"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "StateMachineInfo": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/StateMachineRunId"
          },
          "flowLogicClassName": {
            "type": "string"
          },
          "initiator": {
            "$ref": "#/components/schemas/FlowInitiator"
          },
          "progressTrackerStepAndUpdates": {
            "$ref": "#/components/schemas/DataFeedStringString"
          },
          "invocationContext": {
            "$ref": "#/components/schemas/InvocationContext"
          }
        }
      },
      "StateMachineTransactionMapping": {
        "type": "object",
        "properties": {
          "stateMachineRunId": {
            "$ref": "#/components/schemas/StateMachineRunId"
          },
          "transactionId": {
            "$ref": "#/components/schemas/SecureHash"
          }
        }
      },
      "Added": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/NodeInfo"
          }
        }
      },
      "Removed": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/NodeInfo"
          }
        }
      },
      "TryObject": {
        "type": "object",
        "properties": {
          "failure": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "orThrow": {
            "type": "object"
          }
        }
      },
      "NodeInfo": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkHostAndPort"
            }
          },
          "legalIdentitiesAndCerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyAndCertificate"
            }
          },
          "platformVersion": {
            "type": "integer",
            "format": "int32"
          },
          "serial": {
            "type": "integer",
            "format": "int64"
          },
          "legalIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          }
        }
      },
      "PartyAndCertificate": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "issuerX500Principal": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "encoded": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "byte"
                    }
                  }
                }
              },
              "notBefore": {
                "type": "string",
                "format": "date-time"
              },
              "notAfter": {
                "type": "string",
                "format": "date-time"
              },
              "sigAlgName": {
                "type": "string"
              },
              "sigAlgOID": {
                "type": "string"
              },
              "sigAlgParams": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "issuerUniqueID": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              },
              "subjectUniqueID": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              },
              "keyUsage": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              },
              "subjectAlternativeNames": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              },
              "issuerAlternativeNames": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              },
              "version": {
                "type": "integer",
                "format": "int32"
              },
              "signature": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "basicConstraints": {
                "type": "integer",
                "format": "int32"
              },
              "subjectDN": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "serialNumber": {
                "type": "integer"
              },
              "tbscertificate": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "extendedKeyUsage": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "nonCriticalExtensionOIDs": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "criticalExtensionOIDs": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "publicKey": {
                "type": "object",
                "properties": {
                  "encoded": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "byte"
                    }
                  },
                  "algorithm": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "party": {
            "$ref": "#/components/schemas/Party"
          },
          "certPath": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "certificates": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "encoded": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "byte"
                      }
                    },
                    "publicKey": {
                      "type": "object",
                      "properties": {
                        "encoded": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "byte"
                          }
                        },
                        "algorithm": {
                          "type": "string"
                        },
                        "format": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "encodings": {
                "type": "object"
              }
            }
          },
          "name": {
            "$ref": "#/components/schemas/CordaX500Name"
          },
          "owningKey": {
            "type": "object",
            "properties": {
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "algorithm": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          }
        }
      },
      "Modified": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/NodeInfo"
          },
          "previousNode": {
            "$ref": "#/components/schemas/NodeInfo"
          }
        }
      },
      "Vault": {
        "type": "object",
        "properties": {
          "states": {
            "type": "object"
          }
        }
      },
      "ConstraintInfo": {
        "type": "object",
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/AttachmentConstraint"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateAndRefContractState"
            }
          },
          "statesMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateMetadata"
            }
          },
          "totalStatesAvailable": {
            "type": "integer",
            "format": "int64"
          },
          "stateTypes": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "otherResults": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "StateAndRefContractState": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TransactionStateContractState"
          },
          "ref": {
            "$ref": "#/components/schemas/StateRef"
          }
        }
      },
      "StateMetadata": {
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/StateRef"
          },
          "contractStateClassName": {
            "type": "string"
          },
          "recordedTime": {
            "type": "integer",
            "format": "int64"
          },
          "consumedTime": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "notary": {
            "$ref": "#/components/schemas/AbstractParty"
          },
          "lockId": {
            "type": "string"
          },
          "lockUpdateTime": {
            "type": "integer",
            "format": "int64"
          },
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintInfo": {
            "$ref": "#/components/schemas/ConstraintInfo"
          }
        }
      },
      "Update": {
        "type": "object",
        "properties": {
          "consumed": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateAndRefContractState"
            }
          },
          "produced": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateAndRefContractState"
            }
          },
          "flowId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "GENERAL",
              "NOTARY_CHANGE",
              "CONTRACT_UPGRADE"
            ]
          },
          "references": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateAndRefContractState"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "AndComposition": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/components/schemas/QueryCriteria"
          },
          "b": {
            "$ref": "#/components/schemas/QueryCriteria"
          }
        }
      },
      "AttachmentQueryCriteria": {
        "type": "object"
      },
      "AttachmentsQueryCriteria": {
        "type": "object",
        "properties": {
          "uploaderCondition": {
            "$ref": "#/components/schemas/ColumnPredicateString"
          },
          "filenameCondition": {
            "$ref": "#/components/schemas/ColumnPredicateString"
          },
          "uploadDateCondition": {
            "$ref": "#/components/schemas/ColumnPredicateInstant"
          },
          "contractClassNamesCondition": {
            "$ref": "#/components/schemas/ColumnPredicateListString"
          },
          "signersCondition": {
            "$ref": "#/components/schemas/ColumnPredicateListPublicKey"
          },
          "versionCondition": {
            "$ref": "#/components/schemas/ColumnPredicateInteger"
          }
        }
      },
      "ColumnPredicateInstant": {
        "type": "object"
      },
      "ColumnPredicateInteger": {
        "type": "object"
      },
      "ColumnPredicateListPublicKey": {
        "type": "object"
      },
      "ColumnPredicateListString": {
        "type": "object"
      },
      "ColumnPredicateString": {
        "type": "object"
      },
      "OrComposition": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/components/schemas/QueryCriteria"
          },
          "b": {
            "$ref": "#/components/schemas/QueryCriteria"
          }
        }
      },
      "AttachmentSort": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentSortColumn"
            }
          }
        }
      },
      "AttachmentSortColumn": {
        "type": "object",
        "properties": {
          "sortAttribute": {
            "type": "string",
            "enum": [
              "INSERTION_DATE",
              "UPLOADER",
              "FILENAME",
              "VERSION"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "Builder": {
        "type": "object"
      },
      "Column": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "AggregateFunction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "COUNT",
              "AVG",
              "MIN",
              "MAX",
              "SUM"
            ]
          }
        }
      },
      "Between": {
        "type": "object",
        "properties": {
          "rightToLiteral": {
            "type": "object"
          }
        }
      },
      "BinaryComparison": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL"
            ]
          },
          "rightLiteral": {
            "type": "object"
          }
        }
      },
      "CollectionExpression": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "IN",
              "NOT_IN",
              "IN_IGNORE_CASE",
              "NOT_IN_IGNORE_CASE"
            ]
          },
          "rightLiteral": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "EqualityComparison": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "EQUAL",
              "NOT_EQUAL",
              "EQUAL_IGNORE_CASE",
              "NOT_EQUAL_IGNORE_CASE"
            ]
          },
          "rightLiteral": {
            "type": "object"
          }
        }
      },
      "Likeness": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "LIKE",
              "NOT_LIKE",
              "LIKE_IGNORE_CASE",
              "NOT_LIKE_IGNORE_CASE"
            ]
          },
          "rightLiteral": {
            "type": "string"
          }
        }
      },
      "NullExpression": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "IS_NULL",
              "NOT_NULL"
            ]
          }
        }
      },
      "AggregateFunctionExpression": {
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/ColumnObjectObject"
          },
          "predicate": {
            "$ref": "#/components/schemas/ColumnPredicateObject"
          },
          "groupByColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnObjectObject"
            }
          },
          "orderBy": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "ColumnObjectObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ColumnPredicateObject": {
        "type": "object"
      },
      "BinaryLogical": {
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/CriteriaExpressionObjectBoolean"
          },
          "right": {
            "$ref": "#/components/schemas/CriteriaExpressionObjectBoolean"
          },
          "operator": {
            "type": "string",
            "enum": [
              "AND",
              "OR"
            ]
          }
        }
      },
      "CriteriaExpressionObjectBoolean": {
        "type": "object"
      },
      "ColumnPredicateExpression": {
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/ColumnObjectObject"
          },
          "predicate": {
            "$ref": "#/components/schemas/ColumnPredicateObject"
          }
        }
      },
      "Not": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/CriteriaExpressionObjectBoolean"
          }
        }
      },
      "PageSpecification": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "QueryCriteria": {
        "type": "object"
      },
      "ColumnPredicateLong": {
        "type": "object"
      },
      "FungibleAssetQueryCriteria": {
        "type": "object",
        "properties": {
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintInfo"
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "quantity": {
            "$ref": "#/components/schemas/ColumnPredicateLong"
          },
          "issuer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "issuerRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpaqueBytes"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          }
        }
      },
      "FungibleStateQueryCriteria": {
        "type": "object",
        "properties": {
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintInfo"
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "quantity": {
            "$ref": "#/components/schemas/ColumnPredicateLong"
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          }
        }
      },
      "LinearStateQueryCriteria": {
        "type": "object",
        "properties": {
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintInfo"
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "uuid": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "externalId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          }
        }
      },
      "SoftLockingCondition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "UNLOCKED_ONLY",
              "LOCKED_ONLY",
              "SPECIFIED",
              "UNLOCKED_AND_SPECIFIED"
            ]
          },
          "lockIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "TimeCondition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RECORDED",
              "CONSUMED"
            ]
          },
          "predicate": {
            "$ref": "#/components/schemas/ColumnPredicateInstant"
          }
        }
      },
      "CriteriaExpressionStatePersistableBoolean": {
        "type": "object"
      },
      "VaultCustomQueryCriteria": {
        "type": "object",
        "properties": {
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintInfo"
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "expression": {
            "$ref": "#/components/schemas/CriteriaExpressionStatePersistableBoolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          }
        }
      },
      "VaultQueryCriteria": {
        "type": "object",
        "properties": {
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintInfo"
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "stateRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRef"
            }
          },
          "notary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "softLockingCondition": {
            "$ref": "#/components/schemas/SoftLockingCondition"
          },
          "timeCondition": {
            "$ref": "#/components/schemas/TimeCondition"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortColumn"
            }
          }
        }
      },
      "SortAttribute": {
        "type": "object"
      },
      "SortColumn": {
        "type": "object",
        "properties": {
          "sortAttribute": {
            "$ref": "#/components/schemas/SortAttribute"
          },
          "direction": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "Custom": {
        "type": "object",
        "properties": {
          "entityStateColumnName": {
            "type": "string"
          }
        }
      },
      "Attribute": {
        "type": "object"
      },
      "Standard": {
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/Attribute"
          }
        }
      },
      "FungibleState": {
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/PersistentStateRef"
          },
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/AbstractParty"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "issuer": {
            "$ref": "#/components/schemas/AbstractParty"
          },
          "issuerRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "PersistentStateRef": {
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LinearState": {
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/PersistentStateRef"
          },
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          },
          "externalId": {
            "type": "string"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "FilteredComponent": {
        "type": "object",
        "properties": {
          "component": {
            "$ref": "#/components/schemas/OpaqueBytes"
          },
          "nonce": {
            "$ref": "#/components/schemas/SecureHash"
          }
        }
      },
      "PairIntegerStep": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "$ref": "#/components/schemas/Step"
          }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "progressTracker": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "tracker": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "newStep": {
            "$ref": "#/components/schemas/Step"
          }
        }
      },
      "ProgressTracker": {
        "type": "object",
        "properties": {
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step"
            }
          },
          "stepIndex": {
            "type": "integer",
            "format": "int32"
          },
          "stepsTreeIndex": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "currentStep": {
            "$ref": "#/components/schemas/Step"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "stepsTreeIndexChanges": {
            "$ref": "#/components/schemas/ObservableInteger"
          },
          "allStepsLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PairIntegerString"
            }
          },
          "stepsTreeChanges": {
            "$ref": "#/components/schemas/ObservableListPairIntegerString"
          },
          "hasEnded": {
            "type": "boolean"
          },
          "currentStepRecursive": {
            "$ref": "#/components/schemas/Step"
          },
          "topLevelTracker": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "allSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PairIntegerStep"
            }
          }
        }
      },
      "Step": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Rendering": {
        "type": "object",
        "properties": {
          "progressTracker": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "tracker": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "ofStep": {
            "$ref": "#/components/schemas/Step"
          }
        }
      },
      "Structural": {
        "type": "object",
        "properties": {
          "progressTracker": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "tracker": {
            "$ref": "#/components/schemas/ProgressTracker"
          },
          "parent": {
            "$ref": "#/components/schemas/Step"
          }
        }
      },
      "BusinessCalendar": {
        "type": "object",
        "properties": {
          "holidayDates": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            }
          }
        }
      },
      "Commodity": {
        "type": "object",
        "properties": {
          "commodityCode": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "defaultFractionDigits": {
            "type": "integer",
            "format": "int32"
          },
          "displayTokenSize": {
            "type": "number"
          }
        }
      },
      "Expression": {
        "type": "object",
        "properties": {
          "expr": {
            "type": "string"
          }
        }
      },
      "FixOf": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "forDay": {
            "type": "string",
            "format": "date"
          },
          "ofTenor": {
            "$ref": "#/components/schemas/Tenor"
          }
        }
      },
      "Tenor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "IssuedObject": {
        "type": "object",
        "properties": {
          "issuer": {
            "$ref": "#/components/schemas/PartyAndReference"
          },
          "product": {
            "type": "object"
          }
        }
      },
      "NonEmptySetIssuedObject": {
        "uniqueItems": true,
        "type": "array",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        },
        "items": {
          "$ref": "#/components/schemas/IssuedObject"
        }
      },
      "NonEmptySetSecureHash": {
        "uniqueItems": true,
        "type": "array",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        },
        "items": {
          "$ref": "#/components/schemas/SecureHash"
        }
      },
      "PartyAndReference": {
        "type": "object",
        "properties": {
          "party": {
            "$ref": "#/components/schemas/AbstractParty"
          },
          "reference": {
            "$ref": "#/components/schemas/OpaqueBytes"
          }
        }
      },
      "Terms": {
        "type": "object",
        "properties": {
          "acceptableContracts": {
            "uniqueItems": true,
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              }
            },
            "items": {
              "$ref": "#/components/schemas/SecureHash"
            }
          },
          "acceptableIssuedProducts": {
            "uniqueItems": true,
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              }
            },
            "items": {
              "$ref": "#/components/schemas/IssuedObject"
            }
          },
          "dueBefore": {
            "type": "integer",
            "format": "int64"
          },
          "timeTolerance": {
            "type": "object",
            "properties": {
              "seconds": {
                "type": "integer",
                "format": "int64"
              },
              "nano": {
                "type": "integer",
                "format": "int32"
              },
              "units": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateBased": {
                      "type": "boolean"
                    },
                    "durationEstimated": {
                      "type": "boolean"
                    },
                    "timeBased": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "zero": {
                "type": "boolean"
              },
              "negative": {
                "type": "boolean"
              }
            }
          },
          "product": {
            "type": "object"
          }
        }
      },
      "FINALISING_TX": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "GENERATING_ID": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "GENERATING_TX": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SIGNING_TX": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ExitRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issuerRef": {
            "$ref": "#/components/schemas/OpaqueBytes"
          }
        }
      },
      "IssueAndPaymentRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issueRef": {
            "$ref": "#/components/schemas/OpaqueBytes"
          },
          "recipient": {
            "$ref": "#/components/schemas/Party"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "anonymous": {
            "type": "boolean"
          }
        }
      },
      "IssueRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issueRef": {
            "$ref": "#/components/schemas/OpaqueBytes"
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          }
        }
      },
      "PaymentRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "recipient": {
            "$ref": "#/components/schemas/Party"
          },
          "anonymous": {
            "type": "boolean"
          },
          "issuerConstraint": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "notary": {
            "$ref": "#/components/schemas/Party"
          }
        }
      },
      "AutoOffer": {
        "type": "object",
        "properties": {
          "notary": {
            "$ref": "#/components/schemas/Party"
          },
          "dealBeingOffered": {
            "$ref": "#/components/schemas/DealState"
          }
        }
      },
      "DealState": {
        "type": "object",
        "properties": {
          "linearId": {
            "$ref": "#/components/schemas/UniqueIdentifier"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractParty"
            }
          }
        }
      },
      "AnonymousParty": {
        "type": "object",
        "properties": {
          "owningKey": {
            "type": "object",
            "properties": {
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "algorithm": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          }
        }
      },
      "Handshake": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "object"
          },
          "primaryIdentity": {
            "$ref": "#/components/schemas/AnonymousParty"
          },
          "secondaryIdentity": {
            "$ref": "#/components/schemas/AnonymousParty"
          }
        }
      },
      "SENDING_PROPOSAL": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "COLLECTING_SIGNATURES": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "RECORDING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "AWAITING_PROPOSAL": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "VERIFYING_AND_SIGNING": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/ObservableChange"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SellerTradeInfo": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "payToIdentity": {
            "$ref": "#/components/schemas/PartyAndCertificate"
          }
        }
      },
      "CashSchemaV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "migrationResource": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "mappedTypes": {
            "type": "object"
          }
        }
      },
      "PersistentCashState": {
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/PersistentStateRef"
          },
          "owner": {
            "$ref": "#/components/schemas/AbstractParty"
          },
          "pennies": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "issuerPartyHash": {
            "type": "string"
          },
          "issuerRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "CommercialPaperSchemaV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "migrationResource": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "mappedTypes": {
            "type": "object"
          }
        }
      },
      "PersistentCommercialPaperState": {
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/PersistentStateRef"
          },
          "issuancePartyHash": {
            "type": "string"
          },
          "issuanceRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "ownerHash": {
            "type": "string"
          },
          "maturity": {
            "type": "integer",
            "format": "int64"
          },
          "faceValue": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "faceValueIssuerPartyHash": {
            "type": "string"
          },
          "faceValueIssuerRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      }
    }
  }
}