{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "",
    "description" : "",
    "contact" : { },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8080/api/rest"
  } ],
  "paths" : {
    "/network/nodes" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "",
        "parameters" : [ {
          "name" : "host-and-port",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x500-name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/io.bluebank.braid.corda.services.SimpleNodeInfo"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/network/notaries" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "",
        "parameters" : [ {
          "name" : "x500-name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/net.corda.core.identity.Party"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/network/nodes/self" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.bluebank.braid.corda.services.SimpleNodeInfo"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/flows" : {
      "get" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Authorise" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/generated.net.corda.core.flows.ContractUpgradeFlow_AuthorisePayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "empty response"
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Deauthorise" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/generated.net.corda.core.flows.ContractUpgradeFlow_DeauthorisePayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "empty response"
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashExitFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/generated.net.corda.finance.flows.CashExitFlowPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueAndPaymentFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/generated.net.corda.finance.flows.CashIssueAndPaymentFlowPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/generated.net.corda.finance.flows.CashIssueFlowPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashPaymentFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/generated.net.corda.finance.flows.CashPaymentFlowPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.internal.CashConfigDataFlow" : {
      "post" : {
        "tags" : [ "cordapps" ],
        "description" : "",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/generated.net.corda.finance.internal.CashConfigDataFlowPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/net.corda.finance.internal.CashConfiguration"
                }
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "io.bluebank.braid.corda.services.SimpleNodeInfo" : {
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.utilities.NetworkHostAndPort"
            }
          },
          "legalIdentities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.Party"
            }
          }
        }
      },
      "net.corda.core.identity.Party" : {
        "type" : "object",
        "properties" : {
          "owningKey" : {
            "type" : "string",
            "description" : "Base 58 Encoded Public Key",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "name" : {
            "type" : "string",
            "description" : "CordaX500Name encoded Party",
            "example" : "O=Bank A, L=London, C=GB"
          }
        }
      },
      "net.corda.core.utilities.NetworkHostAndPort" : {
        "type" : "object",
        "properties" : {
          "host" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "generated.net.corda.core.flows.ContractUpgradeFlow_AuthorisePayload" : {
        "type" : "object",
        "properties" : {
          "stateAndRef" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateAndRefObject"
          },
          "upgradedContractClass" : {
            "type" : "string",
            "description" : "Java class name",
            "example" : "java.lang.Object"
          }
        }
      },
      "net.corda.core.contracts.AttachmentConstraint" : {
        "type" : "object"
      },
      "net.corda.core.contracts.StateAndRefObject" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.TransactionStateObject"
          },
          "ref" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.contracts.StateRef" : {
        "type" : "object",
        "properties" : {
          "txhash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "net.corda.core.contracts.TransactionStateObject" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object"
          },
          "contract" : {
            "type" : "string"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "encumbrance" : {
            "type" : "integer",
            "format" : "int32"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "generated.net.corda.core.flows.ContractUpgradeFlow_DeauthorisePayload" : {
        "type" : "object",
        "properties" : {
          "stateRef" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.contracts.ContractState" : {
        "type" : "object",
        "properties" : {
          "participants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          }
        }
      },
      "net.corda.core.contracts.StateAndRef" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
          },
          "ref" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.ContractState"
          },
          "contract" : {
            "type" : "string"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "encumbrance" : {
            "type" : "integer",
            "format" : "int32"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "net.corda.core.identity.AbstractParty" : {
        "type" : "object",
        "properties" : {
          "owningKey" : {
            "type" : "string",
            "description" : "Base 58 Encoded Public Key",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.contracts.CommandObject" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object"
          },
          "signers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Base 58 Encoded Public Key",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          }
        }
      },
      "net.corda.core.contracts.TimeWindow" : {
        "type" : "object",
        "properties" : {
          "length" : {
            "type" : "object",
            "properties" : {
              "seconds" : {
                "type" : "integer",
                "format" : "int64"
              },
              "nano" : {
                "type" : "integer",
                "format" : "int32"
              },
              "units" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "timeBased" : {
                      "type" : "boolean"
                    },
                    "dateBased" : {
                      "type" : "boolean"
                    },
                    "durationEstimated" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "zero" : {
                "type" : "boolean"
              },
              "negative" : {
                "type" : "boolean"
              }
            }
          },
          "fromTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "midpoint" : {
            "type" : "integer",
            "format" : "int64"
          },
          "untilTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "net.corda.core.crypto.MerkleTree" : {
        "type" : "object",
        "properties" : {
          "hash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.transactions.ComponentGroup" : {
        "type" : "object",
        "properties" : {
          "groupIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Hex encoded Byte Array",
              "example" : "736F6D654279746573"
            }
          }
        }
      },
      "net.corda.core.transactions.CoreTransaction" : {
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "networkParametersHash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "outputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
            }
          },
          "outputStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.ContractState"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.transactions.NotaryChangeWireTransaction" : {
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "newNotary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "serializedComponents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Hex encoded Byte Array",
              "example" : "736F6D654279746573"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "networkParametersHash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "outputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
            }
          },
          "outputStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.ContractState"
            }
          }
        }
      },
      "net.corda.core.transactions.SignedTransaction" : {
        "type" : "object",
        "properties" : {
          "txBits" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "sigs" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Hex encoded Byte Array",
              "example" : "736F6D654279746573"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "coreTransaction" : {
            "$ref" : "#/components/schemas/net.corda.core.transactions.CoreTransaction"
          },
          "tx" : {
            "$ref" : "#/components/schemas/net.corda.core.transactions.WireTransaction"
          },
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "networkParametersHash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "requiredSigningKeys" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Base 58 Encoded Public Key",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          },
          "notaryChangeTx" : {
            "$ref" : "#/components/schemas/net.corda.core.transactions.NotaryChangeWireTransaction"
          },
          "notaryChangeTransaction" : {
            "type" : "boolean"
          },
          "missingSigners" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Base 58 Encoded Public Key",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          }
        }
      },
      "net.corda.core.transactions.WireTransaction" : {
        "type" : "object",
        "properties" : {
          "attachments" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Base 58 Encoded Secure Hash",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          },
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "outputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
            }
          },
          "commands" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.CommandObject"
            }
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "timeWindow" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.TimeWindow"
          },
          "networkParametersHash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "componentGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.transactions.ComponentGroup"
            }
          },
          "privacySalt" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "id" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "requiredSigningKeys" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Base 58 Encoded Public Key",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          },
          "merkleTree" : {
            "$ref" : "#/components/schemas/net.corda.core.crypto.MerkleTree"
          },
          "groupHashes$core" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Base 58 Encoded Secure Hash",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          },
          "groupsMerkleRoots$core" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Base 58 Encoded Secure Hash",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          },
          "availableComponentNonces$core" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Base 58 Encoded Secure Hash",
                "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
              }
            }
          },
          "availableComponentHashes$core" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Base 58 Encoded Secure Hash",
                "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
              }
            }
          },
          "availableComponentGroups" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "outputStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.ContractState"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Result" : {
        "type" : "object",
        "properties" : {
          "stx" : {
            "$ref" : "#/components/schemas/net.corda.core.transactions.SignedTransaction"
          },
          "recipient" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
          }
        }
      },
      "AmountCurrency" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "type" : "integer",
            "description" : "total amount in minor units",
            "format" : "int32",
            "example" : 100
          },
          "displayTokenSize" : {
            "type" : "number",
            "example" : 0.01
          },
          "token" : {
            "type" : "string",
            "example" : "GBP"
          }
        }
      },
      "generated.net.corda.finance.flows.CashExitFlowPayload" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "issuerRef" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          }
        }
      },
      "generated.net.corda.finance.flows.CashIssueAndPaymentFlowPayload" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "issueRef" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "recipient" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous" : {
            "type" : "boolean"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "generated.net.corda.finance.flows.CashIssueFlowPayload" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "issuerBankPartyRef" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "generated.net.corda.finance.flows.CashPaymentFlowPayload" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "recipient" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous" : {
            "type" : "boolean"
          },
          "issuerConstraint" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.Party"
            }
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "net.corda.finance.internal.CashConfiguration" : {
        "type" : "object",
        "properties" : {
          "issuableCurrencies" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "3 digit ISO 4217 code of the currency",
              "example" : "GBP"
            }
          },
          "supportedCurrencies" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "3 digit ISO 4217 code of the currency",
              "example" : "GBP"
            }
          }
        }
      },
      "generated.net.corda.finance.internal.CashConfigDataFlowPayload" : {
        "type" : "object"
      },
      "net.corda.core.context.Actor" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Actor_Id"
          },
          "serviceId" : {
            "$ref" : "#/components/schemas/net.corda.core.context.AuthServiceId"
          },
          "owningLegalIdentity" : {
            "type" : "string",
            "description" : "CordaX500Name encoded Party",
            "example" : "O=Bank A, L=London, C=GB"
          }
        }
      },
      "net.corda.core.context.Actor_Id" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          }
        }
      },
      "net.corda.core.context.AuthServiceId" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          }
        }
      },
      "net.corda.core.context.InvocationContext" : {
        "type" : "object",
        "properties" : {
          "origin" : {
            "$ref" : "#/components/schemas/net.corda.core.context.InvocationOrigin"
          },
          "trace" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Trace"
          },
          "actor" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Actor"
          },
          "externalTrace" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Trace"
          },
          "impersonatedActor" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Actor"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin" : {
        "type" : "object"
      },
      "net.corda.core.context.Trace" : {
        "type" : "object",
        "properties" : {
          "invocationId" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Trace_InvocationId"
          },
          "sessionId" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Trace_SessionId"
          }
        }
      },
      "net.corda.core.context.Trace_InvocationId" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "net.corda.core.context.Trace_SessionId" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Peer" : {
        "type" : "object",
        "properties" : {
          "party" : {
            "type" : "string",
            "description" : "CordaX500Name encoded Party",
            "example" : "O=Bank A, L=London, C=GB"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_RPC" : {
        "type" : "object",
        "properties" : {
          "actor" : {
            "$ref" : "#/components/schemas/net.corda.core.context.Actor"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Scheduled" : {
        "type" : "object",
        "properties" : {
          "scheduledState" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.ScheduledStateRef"
          }
        }
      },
      "net.corda.core.contracts.ScheduledStateRef" : {
        "type" : "object",
        "properties" : {
          "ref" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "scheduledAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Service" : {
        "type" : "object",
        "properties" : {
          "serviceClassName" : {
            "type" : "string"
          },
          "owningLegalIdentity" : {
            "type" : "string",
            "description" : "CordaX500Name encoded Party",
            "example" : "O=Bank A, L=London, C=GB"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Shell" : {
        "type" : "object"
      },
      "net.corda.core.contracts.AmountTransfer" : {
        "type" : "object",
        "properties" : {
          "quantityDelta" : {
            "type" : "integer",
            "format" : "int64"
          },
          "destination" : {
            "type" : "object"
          }
        }
      },
      "net.corda.core.contracts.LinearPointer" : {
        "type" : "object",
        "properties" : {
          "pointer" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.UniqueIdentifier"
          },
          "type" : {
            "type" : "string",
            "description" : "Java class name",
            "example" : "java.lang.Object"
          }
        }
      },
      "net.corda.core.contracts.UniqueIdentifier" : {
        "type" : "object",
        "properties" : {
          "externalId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "net.corda.core.contracts.StaticPointer" : {
        "type" : "object",
        "properties" : {
          "pointer" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "type" : {
            "type" : "string",
            "description" : "Java class name",
            "example" : "java.lang.Object"
          }
        }
      },
      "net.corda.core.contracts.TransactionState" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.ContractState"
          },
          "contract" : {
            "type" : "string"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "encumbrance" : {
            "type" : "integer",
            "format" : "int32"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "net.corda.core.contracts.TransactionVerificationException_InvalidAttachmentException" : {
        "type" : "object",
        "properties" : {
          "cause" : {
            "type" : "object",
            "properties" : {
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "className" : {
                      "type" : "string"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "localizedMessage" : {
                "type" : "string"
              },
              "suppressed" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "stackTrace" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "methodName" : {
                            "type" : "string"
                          },
                          "fileName" : {
                            "type" : "string"
                          },
                          "lineNumber" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "className" : {
                            "type" : "string"
                          },
                          "nativeMethod" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "localizedMessage" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "methodName" : {
                  "type" : "string"
                },
                "fileName" : {
                  "type" : "string"
                },
                "lineNumber" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "className" : {
                  "type" : "string"
                },
                "nativeMethod" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "originalExceptionClassName" : {
            "type" : "string"
          },
          "originalErrorId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "txId" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "attachmentHash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "errorId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "message" : {
            "type" : "string"
          },
          "originalMessage" : {
            "type" : "string"
          },
          "localizedMessage" : {
            "type" : "string"
          },
          "suppressed" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "stackTrace" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "methodName" : {
                        "type" : "string"
                      },
                      "fileName" : {
                        "type" : "string"
                      },
                      "lineNumber" : {
                        "type" : "integer",
                        "format" : "int32"
                      },
                      "className" : {
                        "type" : "string"
                      },
                      "nativeMethod" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "message" : {
                  "type" : "string"
                },
                "localizedMessage" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "net.corda.core.contracts.TransactionVerificationException_PackageOwnershipException" : {
        "type" : "object",
        "properties" : {
          "cause" : {
            "type" : "object",
            "properties" : {
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "className" : {
                      "type" : "string"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "localizedMessage" : {
                "type" : "string"
              },
              "suppressed" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "stackTrace" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "methodName" : {
                            "type" : "string"
                          },
                          "fileName" : {
                            "type" : "string"
                          },
                          "lineNumber" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "className" : {
                            "type" : "string"
                          },
                          "nativeMethod" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "localizedMessage" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "methodName" : {
                  "type" : "string"
                },
                "fileName" : {
                  "type" : "string"
                },
                "lineNumber" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "className" : {
                  "type" : "string"
                },
                "nativeMethod" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "originalExceptionClassName" : {
            "type" : "string"
          },
          "originalErrorId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "txId" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "attachmentHash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "invalidClassName" : {
            "type" : "string"
          },
          "packageName" : {
            "type" : "string"
          },
          "errorId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "message" : {
            "type" : "string"
          },
          "originalMessage" : {
            "type" : "string"
          },
          "localizedMessage" : {
            "type" : "string"
          },
          "suppressed" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "stackTrace" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "methodName" : {
                        "type" : "string"
                      },
                      "fileName" : {
                        "type" : "string"
                      },
                      "lineNumber" : {
                        "type" : "integer",
                        "format" : "int32"
                      },
                      "className" : {
                        "type" : "string"
                      },
                      "nativeMethod" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "message" : {
                  "type" : "string"
                },
                "localizedMessage" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Acceptor_Companion_APPROVING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "rx.ObservableNet.corda.core.utilities.ProgressTracker_Change" : {
        "type" : "object"
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Acceptor_Companion_VERIFYING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Instigator_Companion_NOTARY" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Instigator_Companion_SIGNING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Proposal" : {
        "type" : "object",
        "properties" : {
          "stateRef" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "modification" : {
            "type" : "object"
          }
        }
      },
      "net.corda.core.flows.CollectSignaturesFlow_Companion_COLLECTING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.CollectSignaturesFlow_Companion_VERIFYING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.FinalityFlow_Companion_BROADCASTING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.FinalityFlow_Companion_NOTARISING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.FlowInfo" : {
        "type" : "object",
        "properties" : {
          "flowVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "appName" : {
            "type" : "string"
          }
        }
      },
      "net.corda.core.flows.IllegalFlowLogicException" : {
        "type" : "object",
        "properties" : {
          "cause" : {
            "type" : "object",
            "properties" : {
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "className" : {
                      "type" : "string"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "localizedMessage" : {
                "type" : "string"
              },
              "suppressed" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "stackTrace" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "methodName" : {
                            "type" : "string"
                          },
                          "fileName" : {
                            "type" : "string"
                          },
                          "lineNumber" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "className" : {
                            "type" : "string"
                          },
                          "nativeMethod" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "localizedMessage" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "methodName" : {
                  "type" : "string"
                },
                "fileName" : {
                  "type" : "string"
                },
                "lineNumber" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "className" : {
                  "type" : "string"
                },
                "nativeMethod" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "localizedMessage" : {
            "type" : "string"
          },
          "suppressed" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "stackTrace" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "methodName" : {
                        "type" : "string"
                      },
                      "fileName" : {
                        "type" : "string"
                      },
                      "lineNumber" : {
                        "type" : "integer",
                        "format" : "int32"
                      },
                      "className" : {
                        "type" : "string"
                      },
                      "nativeMethod" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "message" : {
                  "type" : "string"
                },
                "localizedMessage" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "net.corda.core.flows.NotarisationPayload" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object"
          },
          "requestSignature" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.NotarisationRequestSignature"
          },
          "coreTransaction" : {
            "$ref" : "#/components/schemas/net.corda.core.transactions.CoreTransaction"
          },
          "signedTransaction" : {
            "$ref" : "#/components/schemas/net.corda.core.transactions.SignedTransaction"
          }
        }
      },
      "net.corda.core.flows.NotarisationRequestSignature" : {
        "type" : "object",
        "properties" : {
          "digitalSignature" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "platformVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "net.corda.core.flows.NotarisationRequest" : {
        "type" : "object",
        "properties" : {
          "transactionId" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "statesToConsume" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          }
        }
      },
      "net.corda.core.flows.NotarisationResponse" : {
        "type" : "object",
        "properties" : {
          "signatures" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Hex encoded Byte Array",
              "example" : "736F6D654279746573"
            }
          }
        }
      },
      "net.corda.core.flows.NotaryError_Conflict" : {
        "type" : "object",
        "properties" : {
          "txId" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "consumedStates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/net.corda.core.flows.StateConsumptionDetails"
            }
          }
        }
      },
      "net.corda.core.flows.StateConsumptionDetails" : {
        "type" : "object",
        "properties" : {
          "hashOfTransactionId" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "INPUT_STATE", "REFERENCE_INPUT_STATE" ]
          }
        }
      },
      "net.corda.core.flows.NotaryError_General" : {
        "type" : "object",
        "properties" : {
          "cause" : {
            "type" : "object",
            "properties" : {
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "className" : {
                      "type" : "string"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "localizedMessage" : {
                "type" : "string"
              },
              "suppressed" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "stackTrace" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "methodName" : {
                            "type" : "string"
                          },
                          "fileName" : {
                            "type" : "string"
                          },
                          "lineNumber" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "className" : {
                            "type" : "string"
                          },
                          "nativeMethod" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "localizedMessage" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "net.corda.core.flows.NotaryError_RequestSignatureInvalid" : {
        "type" : "object",
        "properties" : {
          "cause" : {
            "type" : "object",
            "properties" : {
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "className" : {
                      "type" : "string"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "localizedMessage" : {
                "type" : "string"
              },
              "suppressed" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "stackTrace" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "methodName" : {
                            "type" : "string"
                          },
                          "fileName" : {
                            "type" : "string"
                          },
                          "lineNumber" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "className" : {
                            "type" : "string"
                          },
                          "nativeMethod" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "localizedMessage" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "net.corda.core.flows.NotaryError_TimeWindowInvalid" : {
        "type" : "object",
        "properties" : {
          "currentTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "txTimeWindow" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.TimeWindow"
          }
        }
      },
      "net.corda.core.flows.NotaryError_TransactionInvalid" : {
        "type" : "object",
        "properties" : {
          "cause" : {
            "type" : "object",
            "properties" : {
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "className" : {
                      "type" : "string"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "localizedMessage" : {
                "type" : "string"
              },
              "suppressed" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "stackTrace" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "methodName" : {
                            "type" : "string"
                          },
                          "fileName" : {
                            "type" : "string"
                          },
                          "lineNumber" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "className" : {
                            "type" : "string"
                          },
                          "nativeMethod" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "localizedMessage" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "net.corda.core.flows.NotaryError_WrongNotary" : {
        "type" : "object"
      },
      "net.corda.core.flows.NotaryFlow_Client_Companion_REQUESTING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.NotaryFlow_Client_Companion_VALIDATING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.SignTransactionFlow_Companion_RECEIVING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.SignTransactionFlow_Companion_SIGNING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.SignTransactionFlow_Companion_VERIFYING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.WaitTimeUpdate" : {
        "type" : "object",
        "properties" : {
          "waitTime" : {
            "type" : "object",
            "properties" : {
              "seconds" : {
                "type" : "integer",
                "format" : "int64"
              },
              "nano" : {
                "type" : "integer",
                "format" : "int32"
              },
              "units" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "timeBased" : {
                      "type" : "boolean"
                    },
                    "dateBased" : {
                      "type" : "boolean"
                    },
                    "durationEstimated" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "zero" : {
                "type" : "boolean"
              },
              "negative" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "net.corda.core.flows.WithReferencedStatesFlow_Companion_ATTEMPT" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.WithReferencedStatesFlow_Companion_RETRYING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.flows.WithReferencedStatesFlow_Companion_SUCCESS" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.messaging.DataFeed" : {
        "type" : "object",
        "properties" : {
          "snapshot" : {
            "type" : "object"
          },
          "updates" : {
            "$ref" : "#/components/schemas/rx.ObservableObject"
          }
        }
      },
      "rx.ObservableObject" : {
        "type" : "object"
      },
      "net.corda.core.concurrent.CordaFutureObject" : {
        "type" : "object",
        "properties" : {
          "done" : {
            "type" : "boolean"
          },
          "cancelled" : {
            "type" : "boolean"
          }
        }
      },
      "net.corda.core.flows.StateMachineRunId" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "net.corda.core.messaging.FlowHandleImpl" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "returnValue" : {
            "$ref" : "#/components/schemas/net.corda.core.concurrent.CordaFutureObject"
          }
        }
      },
      "kotlin.PairIntegerString" : {
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "string"
          }
        }
      },
      "net.corda.core.messaging.DataFeedIntegerInteger" : {
        "type" : "object",
        "properties" : {
          "snapshot" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updates" : {
            "$ref" : "#/components/schemas/rx.ObservableInteger"
          }
        }
      },
      "net.corda.core.messaging.DataFeedListKotlin.PairIntegerStringListKotlin.PairIntegerString" : {
        "type" : "object",
        "properties" : {
          "snapshot" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/kotlin.PairIntegerString"
            }
          },
          "updates" : {
            "$ref" : "#/components/schemas/rx.ObservableListKotlin.PairIntegerString"
          }
        }
      },
      "net.corda.core.messaging.FlowProgressHandleImpl" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "returnValue" : {
            "$ref" : "#/components/schemas/net.corda.core.concurrent.CordaFutureObject"
          },
          "progress" : {
            "$ref" : "#/components/schemas/rx.ObservableString"
          },
          "stepsTreeIndexFeed" : {
            "$ref" : "#/components/schemas/net.corda.core.messaging.DataFeedIntegerInteger"
          },
          "stepsTreeFeed" : {
            "$ref" : "#/components/schemas/net.corda.core.messaging.DataFeedListKotlin.PairIntegerStringListKotlin.PairIntegerString"
          }
        }
      },
      "rx.ObservableInteger" : {
        "type" : "object"
      },
      "rx.ObservableListKotlin.PairIntegerString" : {
        "type" : "object"
      },
      "rx.ObservableString" : {
        "type" : "object"
      },
      "net.corda.core.messaging.ParametersUpdateInfo" : {
        "type" : "object",
        "properties" : {
          "hash" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/net.corda.core.node.NetworkParameters"
          },
          "description" : {
            "type" : "string"
          },
          "updateDeadline" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "net.corda.core.node.NetworkParameters" : {
        "type" : "object",
        "properties" : {
          "minimumPlatformVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notaries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.NotaryInfo"
            }
          },
          "maxMessageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxTransactionSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "modifiedTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "epoch" : {
            "type" : "integer",
            "format" : "int32"
          },
          "whitelistedContractImplementations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Base 58 Encoded Secure Hash",
                "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
              }
            }
          },
          "eventHorizon" : {
            "type" : "object",
            "properties" : {
              "seconds" : {
                "type" : "integer",
                "format" : "int64"
              },
              "nano" : {
                "type" : "integer",
                "format" : "int32"
              },
              "units" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "timeBased" : {
                      "type" : "boolean"
                    },
                    "dateBased" : {
                      "type" : "boolean"
                    },
                    "durationEstimated" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "zero" : {
                "type" : "boolean"
              },
              "negative" : {
                "type" : "boolean"
              }
            }
          },
          "packageOwnership" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Base 58 Encoded Public Key",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          }
        }
      },
      "net.corda.core.node.NotaryInfo" : {
        "type" : "object",
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "validating" : {
            "type" : "boolean"
          }
        }
      },
      "net.corda.core.flows.FlowInitiator" : {
        "type" : "object",
        "properties" : {
          "invocationContext" : {
            "$ref" : "#/components/schemas/net.corda.core.context.InvocationContext"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "net.corda.core.messaging.DataFeedStringString" : {
        "type" : "object",
        "properties" : {
          "snapshot" : {
            "type" : "string"
          },
          "updates" : {
            "$ref" : "#/components/schemas/rx.ObservableString"
          }
        }
      },
      "net.corda.core.messaging.StateMachineInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "flowLogicClassName" : {
            "type" : "string"
          },
          "initiator" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.FlowInitiator"
          },
          "progressTrackerStepAndUpdates" : {
            "$ref" : "#/components/schemas/net.corda.core.messaging.DataFeedStringString"
          },
          "invocationContext" : {
            "$ref" : "#/components/schemas/net.corda.core.context.InvocationContext"
          }
        }
      },
      "net.corda.core.messaging.StateMachineTransactionMapping" : {
        "type" : "object",
        "properties" : {
          "stateMachineRunId" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.messaging.StateMachineUpdate_Added" : {
        "type" : "object",
        "properties" : {
          "stateMachineInfo" : {
            "$ref" : "#/components/schemas/net.corda.core.messaging.StateMachineInfo"
          },
          "id" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          }
        }
      },
      "net.corda.core.messaging.StateMachineUpdate_Removed" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "result" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.TryObject"
          }
        }
      },
      "net.corda.core.utilities.TryObject" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "orThrow" : {
            "type" : "object"
          },
          "failure" : {
            "type" : "boolean"
          }
        }
      },
      "net.corda.core.identity.PartyAndCertificate" : {
        "type" : "object",
        "properties" : {
          "certificate" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "issuerX500Principal" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "encoded" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "byte"
                    }
                  }
                }
              },
              "signature" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              },
              "basicConstraints" : {
                "type" : "integer",
                "format" : "int32"
              },
              "subjectDN" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              },
              "version" : {
                "type" : "integer",
                "format" : "int32"
              },
              "serialNumber" : {
                "type" : "integer"
              },
              "tbscertificate" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              },
              "extendedKeyUsage" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "notBefore" : {
                "type" : "string",
                "format" : "date-time"
              },
              "notAfter" : {
                "type" : "string",
                "format" : "date-time"
              },
              "sigAlgName" : {
                "type" : "string"
              },
              "sigAlgOID" : {
                "type" : "string"
              },
              "sigAlgParams" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              },
              "issuerUniqueID" : {
                "type" : "array",
                "items" : {
                  "type" : "boolean"
                }
              },
              "subjectUniqueID" : {
                "type" : "array",
                "items" : {
                  "type" : "boolean"
                }
              },
              "keyUsage" : {
                "type" : "array",
                "items" : {
                  "type" : "boolean"
                }
              },
              "subjectAlternativeNames" : {
                "type" : "array",
                "items" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              },
              "issuerAlternativeNames" : {
                "type" : "array",
                "items" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              },
              "criticalExtensionOIDs" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "nonCriticalExtensionOIDs" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "encoded" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              },
              "publicKey" : {
                "type" : "string",
                "description" : "Base 58 Encoded Public Key",
                "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
              }
            }
          },
          "party" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "certPath" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "certificates" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "type" : {
                      "type" : "string"
                    },
                    "encoded" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "format" : "byte"
                      }
                    },
                    "publicKey" : {
                      "type" : "string",
                      "description" : "Base 58 Encoded Public Key",
                      "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
                    }
                  }
                }
              },
              "encoded" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              },
              "encodings" : {
                "type" : "object"
              }
            }
          },
          "name" : {
            "type" : "string",
            "description" : "CordaX500Name encoded Party",
            "example" : "O=Bank A, L=London, C=GB"
          },
          "owningKey" : {
            "type" : "string",
            "description" : "Base 58 Encoded Public Key",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.node.NodeInfo" : {
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.utilities.NetworkHostAndPort"
            }
          },
          "legalIdentitiesAndCerts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.PartyAndCertificate"
            }
          },
          "platformVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serial" : {
            "type" : "integer",
            "format" : "int64"
          },
          "legalIdentities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.Party"
            }
          }
        }
      },
      "net.corda.core.node.services.NetworkMapCache_MapChange_Added" : {
        "type" : "object",
        "properties" : {
          "node" : {
            "$ref" : "#/components/schemas/net.corda.core.node.NodeInfo"
          }
        }
      },
      "net.corda.core.node.services.NetworkMapCache_MapChange_Modified" : {
        "type" : "object",
        "properties" : {
          "node" : {
            "$ref" : "#/components/schemas/net.corda.core.node.NodeInfo"
          },
          "previousNode" : {
            "$ref" : "#/components/schemas/net.corda.core.node.NodeInfo"
          }
        }
      },
      "net.corda.core.node.services.NetworkMapCache_MapChange_Removed" : {
        "type" : "object",
        "properties" : {
          "node" : {
            "$ref" : "#/components/schemas/net.corda.core.node.NodeInfo"
          }
        }
      },
      "net.corda.core.node.services.Vault" : {
        "type" : "object",
        "properties" : {
          "states" : {
            "type" : "object"
          }
        }
      },
      "net.corda.core.node.services.Vault_ConstraintInfo" : {
        "type" : "object",
        "properties" : {
          "constraint" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
          },
          "ref" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.node.services.Vault_Page" : {
        "type" : "object",
        "properties" : {
          "states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "statesMetadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.Vault_StateMetadata"
            }
          },
          "totalStatesAvailable" : {
            "type" : "integer",
            "format" : "int64"
          },
          "stateTypes" : {
            "type" : "string",
            "enum" : [ "UNCONSUMED", "CONSUMED", "ALL" ]
          },
          "otherResults" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "net.corda.core.node.services.Vault_StateMetadata" : {
        "type" : "object",
        "properties" : {
          "ref" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "contractStateClassName" : {
            "type" : "string"
          },
          "recordedTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "consumedTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNCONSUMED", "CONSUMED", "ALL" ]
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "lockId" : {
            "type" : "string"
          },
          "lockUpdateTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "relevancyStatus" : {
            "type" : "string",
            "enum" : [ "RELEVANT", "NOT_RELEVANT", "ALL" ]
          },
          "constraintInfo" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
          }
        }
      },
      "net.corda.core.node.services.Vault_Update" : {
        "type" : "object",
        "properties" : {
          "consumed" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "produced" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "flowId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "GENERAL", "NOTARY_CHANGE", "CONTRACT_UPGRADE" ]
          },
          "references" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria_AndComposition" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          },
          "b" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria_AttachmentsQueryCriteria" : {
        "type" : "object",
        "properties" : {
          "uploaderCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateString"
          },
          "filenameCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateString"
          },
          "uploadDateCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateInstant"
          },
          "contractClassNamesCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateListString"
          },
          "signersCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateListPublicKey"
          },
          "versionCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateInteger"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicateInstant" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateInteger" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateListPublicKey" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateListString" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateString" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria_OrComposition" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          },
          "b" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentSort" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.vault.AttachmentSort_AttachmentSortColumn"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentSort_AttachmentSortColumn" : {
        "type" : "object",
        "properties" : {
          "sortAttribute" : {
            "type" : "string",
            "enum" : [ "INSERTION_DATE", "UPLOADER", "FILENAME", "VERSION" ]
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "net.corda.core.node.services.vault.Builder" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.Column" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "declaringClass" : {
            "type" : "string",
            "description" : "Java class name",
            "example" : "java.lang.Object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_AggregateFunction" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "COUNT", "AVG", "MIN", "MAX", "SUM" ]
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_Between" : {
        "type" : "object",
        "properties" : {
          "rightToLiteral" : {
            "type" : "object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_BinaryComparison" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "enum" : [ "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL" ]
          },
          "rightLiteral" : {
            "type" : "object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_CollectionExpression" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "enum" : [ "IN", "NOT_IN", "IN_IGNORE_CASE", "NOT_IN_IGNORE_CASE" ]
          },
          "rightLiteral" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_EqualityComparison" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "enum" : [ "EQUAL", "NOT_EQUAL", "EQUAL_IGNORE_CASE", "NOT_EQUAL_IGNORE_CASE" ]
          },
          "rightLiteral" : {
            "type" : "object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_Likeness" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "enum" : [ "LIKE", "NOT_LIKE", "LIKE_IGNORE_CASE", "NOT_LIKE_IGNORE_CASE" ]
          },
          "rightLiteral" : {
            "type" : "string"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_NullExpression" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_NULL", "NOT_NULL" ]
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnObjectObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "declaringClass" : {
            "type" : "string",
            "description" : "Java class name",
            "example" : "java.lang.Object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicateObject" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.CriteriaExpression_AggregateFunctionExpression" : {
        "type" : "object",
        "properties" : {
          "column" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnObjectObject"
          },
          "predicate" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateObject"
          },
          "groupByColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnObjectObject"
            }
          },
          "orderBy" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.CriteriaExpression_BinaryLogical" : {
        "type" : "object",
        "properties" : {
          "left" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean"
          },
          "right" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "AND", "OR" ]
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpression_ColumnPredicateExpression" : {
        "type" : "object",
        "properties" : {
          "column" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnObjectObject"
          },
          "predicate" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateObject"
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpression_Not" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean"
          }
        }
      },
      "net.corda.core.node.services.vault.PageSpecification" : {
        "type" : "object",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "default" : {
            "type" : "boolean"
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.QueryCriteria_AndComposition" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          },
          "b" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicateLong" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.QueryCriteria_FungibleAssetQueryCriteria" : {
        "type" : "object",
        "properties" : {
          "relevancyStatus" : {
            "type" : "string",
            "enum" : [ "RELEVANT", "NOT_RELEVANT", "ALL" ]
          },
          "constraintTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALWAYS_ACCEPT", "HASH", "CZ_WHITELISTED", "SIGNATURE" ]
            }
          },
          "constraints" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          },
          "participants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "owner" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "quantity" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateLong"
          },
          "issuer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "issuerRef" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Hex encoded Byte Array",
              "example" : "736F6D654279746573"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNCONSUMED", "CONSUMED", "ALL" ]
          },
          "contractStateTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Java class name",
              "example" : "java.lang.Object"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_FungibleStateQueryCriteria" : {
        "type" : "object",
        "properties" : {
          "relevancyStatus" : {
            "type" : "string",
            "enum" : [ "RELEVANT", "NOT_RELEVANT", "ALL" ]
          },
          "constraintTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALWAYS_ACCEPT", "HASH", "CZ_WHITELISTED", "SIGNATURE" ]
            }
          },
          "constraints" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          },
          "participants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "quantity" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateLong"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNCONSUMED", "CONSUMED", "ALL" ]
          },
          "contractStateTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Java class name",
              "example" : "java.lang.Object"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_LinearStateQueryCriteria" : {
        "type" : "object",
        "properties" : {
          "relevancyStatus" : {
            "type" : "string",
            "enum" : [ "RELEVANT", "NOT_RELEVANT", "ALL" ]
          },
          "constraintTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALWAYS_ACCEPT", "HASH", "CZ_WHITELISTED", "SIGNATURE" ]
            }
          },
          "constraints" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          },
          "participants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "uuid" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "externalId" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNCONSUMED", "CONSUMED", "ALL" ]
          },
          "contractStateTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Java class name",
              "example" : "java.lang.Object"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_OrComposition" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          },
          "b" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_SoftLockingCondition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "UNLOCKED_ONLY", "LOCKED_ONLY", "SPECIFIED", "UNLOCKED_AND_SPECIFIED" ]
          },
          "lockIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_TimeCondition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "RECORDED", "CONSUMED" ]
          },
          "predicate" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateInstant"
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpressionNet.corda.core.schemas.StatePersistableBoolean" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.QueryCriteria_VaultCustomQueryCriteria" : {
        "type" : "object",
        "properties" : {
          "relevancyStatus" : {
            "type" : "string",
            "enum" : [ "RELEVANT", "NOT_RELEVANT", "ALL" ]
          },
          "constraintTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALWAYS_ACCEPT", "HASH", "CZ_WHITELISTED", "SIGNATURE" ]
            }
          },
          "constraints" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          },
          "participants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "expression" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionNet.corda.core.schemas.StatePersistableBoolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNCONSUMED", "CONSUMED", "ALL" ]
          },
          "contractStateTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Java class name",
              "example" : "java.lang.Object"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_VaultQueryCriteria" : {
        "type" : "object",
        "properties" : {
          "relevancyStatus" : {
            "type" : "string",
            "enum" : [ "RELEVANT", "NOT_RELEVANT", "ALL" ]
          },
          "constraintTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALWAYS_ACCEPT", "HASH", "CZ_WHITELISTED", "SIGNATURE" ]
            }
          },
          "constraints" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          },
          "participants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "UNCONSUMED", "CONSUMED", "ALL" ]
          },
          "contractStateTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Java class name",
              "example" : "java.lang.Object"
            }
          },
          "stateRefs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "notary" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "softLockingCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_SoftLockingCondition"
          },
          "timeCondition" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_TimeCondition"
          }
        }
      },
      "net.corda.core.node.services.vault.Sort" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.node.services.vault.Sort_SortColumn"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.SortAttribute" : {
        "type" : "object"
      },
      "net.corda.core.node.services.vault.Sort_SortColumn" : {
        "type" : "object",
        "properties" : {
          "sortAttribute" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.SortAttribute"
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "net.corda.core.node.services.vault.SortAttribute_Custom" : {
        "type" : "object",
        "properties" : {
          "entityStateClass" : {
            "type" : "string",
            "description" : "Java class name",
            "example" : "java.lang.Object"
          },
          "entityStateColumnName" : {
            "type" : "string"
          }
        }
      },
      "net.corda.core.node.services.vault.SortAttribute_Standard" : {
        "type" : "object",
        "properties" : {
          "attribute" : {
            "$ref" : "#/components/schemas/net.corda.core.node.services.vault.Sort_Attribute"
          }
        }
      },
      "net.corda.core.node.services.vault.Sort_Attribute" : {
        "type" : "object"
      },
      "net.corda.core.schemas.CommonSchemaV1_FungibleState" : {
        "type" : "object",
        "properties" : {
          "stateRef" : {
            "$ref" : "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          },
          "participants" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "owner" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int64"
          },
          "issuer" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "issuerRef" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      },
      "net.corda.core.schemas.PersistentStateRef" : {
        "type" : "object",
        "properties" : {
          "txId" : {
            "type" : "string"
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "net.corda.core.schemas.CommonSchemaV1_LinearState" : {
        "type" : "object",
        "properties" : {
          "stateRef" : {
            "$ref" : "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          },
          "participants" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "externalId" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "net.corda.core.transactions.ContractUpgradeFilteredTransaction_FilteredComponent" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "nonce" : {
            "type" : "string",
            "description" : "Base 58 Encoded Secure Hash",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "kotlin.PairIntegerNet.corda.core.utilities.ProgressTracker_Step" : {
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker" : {
        "type" : "object",
        "properties" : {
          "steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
            }
          },
          "stepIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stepsTreeIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parent" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "currentStep" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "stepsTreeIndexChanges" : {
            "$ref" : "#/components/schemas/rx.ObservableInteger"
          },
          "allStepsLabels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/kotlin.PairIntegerString"
            }
          },
          "stepsTreeChanges" : {
            "$ref" : "#/components/schemas/rx.ObservableListKotlin.PairIntegerString"
          },
          "hasEnded" : {
            "type" : "boolean"
          },
          "currentStepRecursive" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          },
          "topLevelTracker" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "allSteps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/kotlin.PairIntegerNet.corda.core.utilities.ProgressTracker_Step"
            }
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Change_Position" : {
        "type" : "object",
        "properties" : {
          "progressTracker" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "tracker" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "newStep" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Step" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Change_Rendering" : {
        "type" : "object",
        "properties" : {
          "progressTracker" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "tracker" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "ofStep" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Change_Structural" : {
        "type" : "object",
        "properties" : {
          "progressTracker" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "tracker" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "parent" : {
            "$ref" : "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          }
        }
      },
      "net.corda.finance.contracts.BusinessCalendar" : {
        "type" : "object",
        "properties" : {
          "holidayDates" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "date"
            }
          }
        }
      },
      "net.corda.finance.contracts.Commodity" : {
        "type" : "object",
        "properties" : {
          "commodityCode" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "defaultFractionDigits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "displayTokenSize" : {
            "type" : "number"
          }
        }
      },
      "net.corda.finance.contracts.Expression" : {
        "type" : "object",
        "properties" : {
          "expr" : {
            "type" : "string"
          }
        }
      },
      "net.corda.finance.contracts.FixOf" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "forDay" : {
            "type" : "string",
            "format" : "date"
          },
          "ofTenor" : {
            "$ref" : "#/components/schemas/net.corda.finance.contracts.Tenor"
          }
        }
      },
      "net.corda.finance.contracts.Tenor" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "Issued" : {
        "type" : "object",
        "properties" : {
          "issuer" : {
            "type" : "object",
            "properties" : {
              "party" : {
                "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
              },
              "reference" : {
                "type" : "string",
                "description" : "Hex encoded Byte Array",
                "example" : "736F6D654279746573"
              }
            }
          },
          "product" : {
            "type" : "object"
          },
          "_productType" : {
            "type" : "string",
            "example" : "java.util.Currency"
          }
        }
      },
      "net.corda.core.contracts.PartyAndReference" : {
        "type" : "object",
        "properties" : {
          "party" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "reference" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          }
        }
      },
      "net.corda.core.utilities.NonEmptySetNet.corda.core.contracts.IssuedObject" : {
        "uniqueItems" : true,
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/Issued"
        }
      },
      "net.corda.core.utilities.NonEmptySetNet.corda.core.crypto.SecureHash" : {
        "uniqueItems" : true,
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "items" : {
          "type" : "string",
          "description" : "Base 58 Encoded Secure Hash",
          "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
        }
      },
      "net.corda.finance.contracts.asset.Obligation_Terms" : {
        "type" : "object",
        "properties" : {
          "acceptableContracts" : {
            "uniqueItems" : true,
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              },
              "size" : {
                "type" : "integer",
                "format" : "int32"
              }
            },
            "items" : {
              "type" : "string",
              "description" : "Base 58 Encoded Secure Hash",
              "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          },
          "acceptableIssuedProducts" : {
            "uniqueItems" : true,
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              },
              "size" : {
                "type" : "integer",
                "format" : "int32"
              }
            },
            "items" : {
              "$ref" : "#/components/schemas/Issued"
            }
          },
          "dueBefore" : {
            "type" : "integer",
            "format" : "int64"
          },
          "timeTolerance" : {
            "type" : "object",
            "properties" : {
              "seconds" : {
                "type" : "integer",
                "format" : "int64"
              },
              "nano" : {
                "type" : "integer",
                "format" : "int32"
              },
              "units" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "timeBased" : {
                      "type" : "boolean"
                    },
                    "dateBased" : {
                      "type" : "boolean"
                    },
                    "durationEstimated" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "zero" : {
                "type" : "boolean"
              },
              "negative" : {
                "type" : "boolean"
              }
            }
          },
          "product" : {
            "type" : "object"
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_FINALISING_TX" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_GENERATING_ID" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_GENERATING_TX" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_SIGNING_TX" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.CashExitFlow_ExitRequest" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "issuerRef" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          }
        }
      },
      "net.corda.finance.flows.CashIssueAndPaymentFlow_IssueAndPaymentRequest" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "issueRef" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "recipient" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous" : {
            "type" : "boolean"
          }
        }
      },
      "net.corda.finance.flows.CashIssueFlow_IssueRequest" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "issueRef" : {
            "type" : "string",
            "description" : "Hex encoded Byte Array",
            "example" : "736F6D654279746573"
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "net.corda.finance.flows.CashPaymentFlow_PaymentRequest" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "recipient" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous" : {
            "type" : "boolean"
          },
          "issuerConstraint" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.Party"
            }
          },
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "net.corda.finance.contracts.DealState" : {
        "type" : "object",
        "properties" : {
          "linearId" : {
            "$ref" : "#/components/schemas/net.corda.core.contracts.UniqueIdentifier"
          },
          "participants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_AutoOffer" : {
        "type" : "object",
        "properties" : {
          "notary" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.Party"
          },
          "dealBeingOffered" : {
            "$ref" : "#/components/schemas/net.corda.finance.contracts.DealState"
          }
        }
      },
      "net.corda.core.identity.AnonymousParty" : {
        "type" : "object",
        "properties" : {
          "owningKey" : {
            "type" : "string",
            "description" : "Base 58 Encoded Public Key",
            "example" : "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Handshake" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "object"
          },
          "primaryIdentity" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AnonymousParty"
          },
          "secondaryIdentity" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AnonymousParty"
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Primary_Companion_GENERATING_ID" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Primary_Companion_SENDING_PROPOSAL" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_COLLECTING_SIGNATURES" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_RECEIVING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_RECORDING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_SIGNING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_VERIFYING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_COLLECTING_SIGNATURES" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_RECEIVING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_RECORDING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_SIGNING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_VERIFYING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Seller_Companion_AWAITING_PROPOSAL" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Seller_Companion_VERIFYING_AND_SIGNING" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "changes" : {
            "$ref" : "#/components/schemas/rx.ObservableNet.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_SellerTradeInfo" : {
        "type" : "object",
        "properties" : {
          "price" : {
            "$ref" : "#/components/schemas/AmountCurrency"
          },
          "payToIdentity" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.PartyAndCertificate"
          }
        }
      },
      "net.corda.finance.schemas.CashSchemaV1" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "migrationResource" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mappedTypes" : {
            "type" : "object"
          }
        }
      },
      "net.corda.finance.schemas.CashSchemaV1_PersistentCashState" : {
        "type" : "object",
        "properties" : {
          "stateRef" : {
            "$ref" : "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          },
          "owner" : {
            "$ref" : "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "pennies" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "issuerPartyHash" : {
            "type" : "string"
          },
          "issuerRef" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      },
      "net.corda.finance.schemas.CommercialPaperSchemaV1" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "migrationResource" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mappedTypes" : {
            "type" : "object"
          }
        }
      },
      "net.corda.finance.schemas.CommercialPaperSchemaV1_PersistentCommercialPaperState" : {
        "type" : "object",
        "properties" : {
          "stateRef" : {
            "$ref" : "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          },
          "issuancePartyHash" : {
            "type" : "string"
          },
          "issuanceRef" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "ownerHash" : {
            "type" : "string"
          },
          "maturity" : {
            "type" : "integer",
            "format" : "int64"
          },
          "faceValue" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "faceValueIssuerPartyHash" : {
            "type" : "string"
          },
          "faceValueIssuerRef" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      }
    }
  }
}